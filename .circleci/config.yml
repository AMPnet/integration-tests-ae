version: 2
executorType: machine
jobs:
  test:
    machine: true
    environment:
      TERM: dumb
    working_directory: ~/repo

    steps:
      - checkout
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run: docker network prune -f

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      
      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test

  deploy:
    machine: true
    environment:
      TERM: dumb
    steps:
      - add_ssh_keys:
          fingerprints:
            - "76:dc:c4:05:04:a9:54:ca:a9:21:35:ba:cc:21:59:cc"
      - run:
          name: Update docker-compose
          command: ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -t root@167.99.142.146 "docker-compose -f /home/eugen/ampnet-docker-compose/docker-compose.yml pull --ignore-pull-failures"
      - run:
          name: Run docker-compose
          command: ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -t root@167.99.142.146 "docker-compose -f /home/eugen/ampnet-docker-compose/docker-compose.yml up -d"

workflows:
  version: 2

  test-deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master

  nightly:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test
